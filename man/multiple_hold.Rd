% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MH_SHR.R
\name{multiple_hold}
\alias{multiple_hold}
\title{Multiple holdout (MH)}
\usage{
multiple_hold(
  X,
  Y,
  ttmethod,
  n_iter = 99,
  rand_type = "rand_rows",
  tol = .Machine$double.eps,
  n_holdouts = 10,
  percent_train = 0.9,
  parallel = FALSE,
  n_dim_comp = NULL
)
}
\arguments{
\item{X}{first data matrix}

\item{Y}{second data matrix}

\item{ttmethod}{string denoting the two-table method to use,
either 'plsc', 'cca', or 'rda'.}

\item{n_iter}{(default: 99) number of permutation iterations}

\item{rand_type}{(default: 'rand_rows') how to randomize the matrices,
either 'rand_rows'/'RR' or 'rand_each_col'/'REC'.
The RR option permutes entire rows of the \code{X} matrix while leaving \code{Y} unchanged.
The REC option permutes every column of both \code{X} and \code{Y}.}

\item{tol}{(default: \code{.Machine$double.eps}) tolerance value for eigenvalues}

\item{n_holdouts}{(default: 10) the number of holdout sets to compute}

\item{percent_train}{(default: .9) the percentage of observations used
for the training set}

\item{parallel}{(default: FALSE) use a parallelized loop to do the main permutations.
This will use the \code{parallel} package to utilize multiple cores simultaneously
(using \code{\link[parallel:detectCores]{parallel::detectCores()}} - 1 cores).}

\item{n_dim_comp}{(default: \code{NULL}) the number of dimensions to compute null distributions for.
\code{NULL} means all dimensions are tested.
Testing a smaller number of components will cut down on computational time.}
}
\value{
a list containing:
\itemize{
\item \code{fixed_res}: a list containing results from the original, unpermuted analysis.
The results of \code{\link[=select_tt]{select_tt()}} are passed through unchanged.
\item \code{perm_res}: a list containing results from the permutation iterations.
\itemize{
\item \code{rho}: a matrix of size \code{n_holdouts} by number of components (\code{n_dim}), containing
the rho values. Rho assesses the agreement between the latent variables computed
from the holdout set, so there are \code{n_dim} rho values for each holdout set.
\item \code{rho_dist}: an array of size \code{n_iter + 1} by \code{n_dim} by \code{n_holdouts} containing
the null distributions of the rho values.
}
}
}
\description{
MH is a two-table stopping rule that splits data into a training and holdout
set, assesses how the holdout data does on results of the training data,
and compares that to permuted data using a permutation test with deflation.
The function does not compute p values, but that can be accomplished by passing the
results to \code{\link[=pvals_for_MH]{pvals_for_MH()}}.
}
